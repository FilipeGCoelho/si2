//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Core.EntityClient;

namespace SI2.SQL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SI2Entities1 : DbContext
    {
        public SI2Entities1()
            : base("name=SI2Entities1")
        {
            
        }

        public SI2Entities1(string connectionString)
            : base(new EntityConnection(connectionString), true)
        {
            
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Aluguer> Aluguers { get; set; }
        public virtual DbSet<Aluguer_Equipamento> Aluguer_Equipamento { get; set; }
        public virtual DbSet<Aluguer_Promocao> Aluguer_Promocao { get; set; }
        public virtual DbSet<Cliente> Clientes { get; set; }
        public virtual DbSet<Empregado> Empregadoes { get; set; }
        public virtual DbSet<Equipamento> Equipamentoes { get; set; }
        public virtual DbSet<Preco> Precoes { get; set; }
        public virtual DbSet<Promocao> Promocaos { get; set; }
        public virtual DbSet<Tipo> Tipoes { get; set; }
        public virtual DbSet<Aluguer1> Aluguer1 { get; set; }
        public virtual DbSet<Aluguer_Equipamento1> Aluguer_Equipamento1 { get; set; }
        public virtual DbSet<Aluguer_Promocao1> Aluguer_Promocao1 { get; set; }
        public virtual DbSet<Cliente1> Cliente1 { get; set; }
        public virtual DbSet<Empregado1> Empregado1 { get; set; }
        public virtual DbSet<Equipamento1> Equipamento1 { get; set; }
        public virtual DbSet<Preco1> Preco1 { get; set; }
        public virtual DbSet<Promocao1> Promocao1 { get; set; }
        public virtual DbSet<Tipo1> Tipo1 { get; set; }
    
        public virtual int Add_Preco(Nullable<int> idEquipamento, Nullable<int> validade, Nullable<decimal> valor)
        {
            var idEquipamentoParameter = idEquipamento.HasValue ?
                new ObjectParameter("idEquipamento", idEquipamento) :
                new ObjectParameter("idEquipamento", typeof(int));
    
            var validadeParameter = validade.HasValue ?
                new ObjectParameter("validade", validade) :
                new ObjectParameter("validade", typeof(int));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("valor", valor) :
                new ObjectParameter("valor", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Preco", idEquipamentoParameter, validadeParameter, valorParameter);
        }
    
        public virtual int Insert_Aluguer_Com_Cliente(Nullable<int> idCliente, Nullable<System.DateTime> dataInicio, Nullable<System.DateTime> dataFim, Nullable<int> tipo, Nullable<decimal> preco, Nullable<int> nEmpregado)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var dataInicioParameter = dataInicio.HasValue ?
                new ObjectParameter("dataInicio", dataInicio) :
                new ObjectParameter("dataInicio", typeof(System.DateTime));
    
            var dataFimParameter = dataFim.HasValue ?
                new ObjectParameter("dataFim", dataFim) :
                new ObjectParameter("dataFim", typeof(System.DateTime));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var precoParameter = preco.HasValue ?
                new ObjectParameter("preco", preco) :
                new ObjectParameter("preco", typeof(decimal));
    
            var nEmpregadoParameter = nEmpregado.HasValue ?
                new ObjectParameter("nEmpregado", nEmpregado) :
                new ObjectParameter("nEmpregado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Aluguer_Com_Cliente", idClienteParameter, dataInicioParameter, dataFimParameter, tipoParameter, precoParameter, nEmpregadoParameter);
        }
    
        public virtual int Insert_Aluguer_Sem_Cliente(string nomeCliente, Nullable<decimal> nifCliente, string moradaCliente, Nullable<System.DateTime> dataInicio, Nullable<System.DateTime> dataFim, Nullable<int> tipo, Nullable<decimal> preco, Nullable<int> nEmpregado)
        {
            var nomeClienteParameter = nomeCliente != null ?
                new ObjectParameter("nomeCliente", nomeCliente) :
                new ObjectParameter("nomeCliente", typeof(string));
    
            var nifClienteParameter = nifCliente.HasValue ?
                new ObjectParameter("nifCliente", nifCliente) :
                new ObjectParameter("nifCliente", typeof(decimal));
    
            var moradaClienteParameter = moradaCliente != null ?
                new ObjectParameter("moradaCliente", moradaCliente) :
                new ObjectParameter("moradaCliente", typeof(string));
    
            var dataInicioParameter = dataInicio.HasValue ?
                new ObjectParameter("dataInicio", dataInicio) :
                new ObjectParameter("dataInicio", typeof(System.DateTime));
    
            var dataFimParameter = dataFim.HasValue ?
                new ObjectParameter("dataFim", dataFim) :
                new ObjectParameter("dataFim", typeof(System.DateTime));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var precoParameter = preco.HasValue ?
                new ObjectParameter("preco", preco) :
                new ObjectParameter("preco", typeof(decimal));
    
            var nEmpregadoParameter = nEmpregado.HasValue ?
                new ObjectParameter("nEmpregado", nEmpregado) :
                new ObjectParameter("nEmpregado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Aluguer_Sem_Cliente", nomeClienteParameter, nifClienteParameter, moradaClienteParameter, dataInicioParameter, dataFimParameter, tipoParameter, precoParameter, nEmpregadoParameter);
        }
    
        public virtual int Insert_Cliente(string nome, Nullable<decimal> nif, string morada)
        {
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var nifParameter = nif.HasValue ?
                new ObjectParameter("nif", nif) :
                new ObjectParameter("nif", typeof(decimal));
    
            var moradaParameter = morada != null ?
                new ObjectParameter("morada", morada) :
                new ObjectParameter("morada", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Cliente", nomeParameter, nifParameter, moradaParameter);
        }
    
        public virtual int Insert_Equipamento(string descricao, string tipo)
        {
            var descricaoParameter = descricao != null ?
                new ObjectParameter("Descricao", descricao) :
                new ObjectParameter("Descricao", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Equipamento", descricaoParameter, tipoParameter);
        }
    
        public virtual int Insert_Promocao(Nullable<System.DateTime> dataInicio, Nullable<System.DateTime> dataFim, string descricao, string tipo)
        {
            var dataInicioParameter = dataInicio.HasValue ?
                new ObjectParameter("dataInicio", dataInicio) :
                new ObjectParameter("dataInicio", typeof(System.DateTime));
    
            var dataFimParameter = dataFim.HasValue ?
                new ObjectParameter("dataFim", dataFim) :
                new ObjectParameter("dataFim", typeof(System.DateTime));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Promocao", dataInicioParameter, dataFimParameter, descricaoParameter, tipoParameter);
        }
    
        public virtual ObjectResult<ListEquipamentosLivres_Result> ListEquipamentosLivres(string tipo, Nullable<int> tempo)
        {
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var tempoParameter = tempo.HasValue ?
                new ObjectParameter("tempo", tempo) :
                new ObjectParameter("tempo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListEquipamentosLivres_Result>("ListEquipamentosLivres", tipoParameter, tempoParameter);
        }
    
        public virtual ObjectResult<ListNaoUsadosSemana_Result> ListNaoUsadosSemana()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListNaoUsadosSemana_Result>("ListNaoUsadosSemana");
        }
    
        public virtual int Remove_Aluguer(Nullable<int> nSerie)
        {
            var nSerieParameter = nSerie.HasValue ?
                new ObjectParameter("nSerie", nSerie) :
                new ObjectParameter("nSerie", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Remove_Aluguer", nSerieParameter);
        }
    
        public virtual int Remove_Cliente(Nullable<int> numero)
        {
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Remove_Cliente", numeroParameter);
        }
    
        public virtual int Remove_Equipamento(Nullable<int> codigo)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Remove_Equipamento", codigoParameter);
        }
    
        public virtual int Remove_Promocao(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Remove_Promocao", idParameter);
        }
    
        public virtual int Update_Cliente(Nullable<int> numero, string nome, Nullable<decimal> nif, string morada)
        {
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(int));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var nifParameter = nif.HasValue ?
                new ObjectParameter("nif", nif) :
                new ObjectParameter("nif", typeof(decimal));
    
            var moradaParameter = morada != null ?
                new ObjectParameter("morada", morada) :
                new ObjectParameter("morada", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Cliente", numeroParameter, nomeParameter, nifParameter, moradaParameter);
        }
    
        public virtual int Update_Equipamento(Nullable<int> codigo, string descricao, string tipo)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("Descricao", descricao) :
                new ObjectParameter("Descricao", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Equipamento", codigoParameter, descricaoParameter, tipoParameter);
        }
    
        public virtual int Update_Promocao(Nullable<int> id, Nullable<System.DateTime> dataInicio, Nullable<System.DateTime> dataFim, string descricao, string tipo)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var dataInicioParameter = dataInicio.HasValue ?
                new ObjectParameter("dataInicio", dataInicio) :
                new ObjectParameter("dataInicio", typeof(System.DateTime));
    
            var dataFimParameter = dataFim.HasValue ?
                new ObjectParameter("dataFim", dataFim) :
                new ObjectParameter("dataFim", typeof(System.DateTime));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Promocao", idParameter, dataInicioParameter, dataFimParameter, descricaoParameter, tipoParameter);
        }
    }
}
